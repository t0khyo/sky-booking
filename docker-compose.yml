services:
  app:
    build: .
    container_name: skybooking-app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/skybooking
      SPRING_DATASOURCE_USERNAME: skybooking
      SPRING_DATASOURCE_PASSWORD: skybooking
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin
    networks:
      - backend
    expose:
      - "8080"

  nginx:
    image: nginx:alpine
    container_name: skybooking-nginx
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - backend

  postgres:
    image: postgres:16
    container_name: skybooking-postgres
    environment:
      POSTGRES_DB: skybooking
      POSTGRES_USER: skybooking
      POSTGRES_PASSWORD: skybooking
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: skybooking-redis
    command: ["redis-server", "--save", "20", "1", "--loglevel", "warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: skybooking-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    networks:
      - backend

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: skybooking-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: ["start-dev", "--http-port=8080"]
    ports:
      - "8081:8080"
    networks:
      - backend

volumes:
  db-data:

networks:
  backend:
    driver: bridge
